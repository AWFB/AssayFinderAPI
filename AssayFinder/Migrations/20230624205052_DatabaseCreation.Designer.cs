// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace AssayFinder.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    [Migration("20230624205052_DatabaseCreation")]
    partial class DatabaseCreation
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Assay", b =>
                {
                    b.Property<Guid>("AssayId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("AssayId");

                    b.Property<string>("AccreditationNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AccreditationScheme")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AutoCommentAddedToReports")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CostOfTest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Discipline")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailAddress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EqaSchemeForTest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("IsAccreditted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPerformanceAcceptable")
                        .HasColumnType("bit");

                    b.Property<Guid>("LaboratoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("LastUpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("MeditechCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameOfTest")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("NpexAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("PerformanceOutcomesIfNotSatisafactory")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PreAnalyticalAndStorageConditions")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("RangesApplicableToPaeds")
                        .HasColumnType("bit");

                    b.Property<string>("ReferenceRange")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SampleVolume")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransportRequirments")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TurnAroundTime")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("AssayId");

                    b.HasIndex("LaboratoryId");

                    b.ToTable("Assays");
                });

            modelBuilder.Entity("Entities.Models.Laboratory", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LaboratoryId");

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LaboratoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Laboratories");
                });

            modelBuilder.Entity("Entities.Models.Assay", b =>
                {
                    b.HasOne("Entities.Models.Laboratory", "Laboratory")
                        .WithMany("Assays")
                        .HasForeignKey("LaboratoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Laboratory");
                });

            modelBuilder.Entity("Entities.Models.Laboratory", b =>
                {
                    b.Navigation("Assays");
                });
#pragma warning restore 612, 618
        }
    }
}
